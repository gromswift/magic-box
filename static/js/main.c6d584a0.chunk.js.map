{"version":3,"sources":["components/Grid/Grid.module.scss","components/Main/Main.module.scss","components/Grid/Grid.js","components/ActiveCellsList/ActiveCellsList.js","components/Main/img/down-arrow.svg","components/Main/Main.js","components/App/App.js","index.js","components/ActiveCellsList/ActiveCellsList.module.scss","components/App/App.module.scss"],"names":["module","exports","Grid","props","renderCells","rowIdx","cells","i","cellIdx","push","className","styles","cell","onMouseEnter","changeCellState","style","activeCells","backgroundColor","activeMode","gridSize","rows","row","renderRows","ActiveCellsList","_path","container","title","list","Object","values","map","currElem","index","listItem","_extends","assign","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDownArrow","_ref","svgRef","titleId","fill","overflow","viewBox","xmlns","ref","id","d","ForwardRef","Main","state","isModeStarted","setState","prevState","changeMode","currMode","renderOptions","mods","option","onClick","modeName","toggleDropdown","isDropdownOpened","toggleStartBtn","gridContainer","controls","cx","select","selectOpened","selectDefaultValue","dropdown","type","startBtn","startBtnDisabled","startBtnActive","Component","App","handleMods","result","currKey","replace","field","fetchMods","fetch","process","then","res","json","isFetching","catch","err","error","app","loader","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6d584a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Grid_row__2rajf\",\"cell\":\"Grid_cell__2GfFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__3nnM7\",\"gridContainer\":\"Main_gridContainer__N3lgW\",\"controls\":\"Main_controls__1-jxB\",\"select\":\"Main_select__1vinf\",\"selectOpened\":\"Main_selectOpened__Af3lW\",\"dropdown\":\"Main_dropdown__2VtAx\",\"growDown\":\"Main_growDown__1O9RW\",\"selectDefaultValue\":\"Main_selectDefaultValue__3J2_5\",\"option\":\"Main_option__28TP3\",\"startBtn\":\"Main_startBtn__2HtZm\",\"startBtnDisabled\":\"Main_startBtnDisabled__25avS\",\"startBtnActive\":\"Main_startBtnActive__ssTAE\"};","import styles from './Grid.module.scss';\n\nfunction Grid(props) {\n  const renderCells = (rowIdx) => {\n    const cells = [];\n\n    for (let i = 0; i < props.activeMode.gridSize; i++) {\n      const cellIdx = i + 1;\n\n      cells.push(\n        <div className={styles.cell}\n             onMouseEnter={() => props.changeCellState(rowIdx, cellIdx)}\n             style={props.activeCells[`${rowIdx}-${cellIdx}`] ? {backgroundColor: '#03a8f4'} : {}}\n             key={i}\n        />\n      );\n    }\n\n    return cells;\n  }\n\n  const renderRows = () => {\n    const rows = [];\n\n    for (let i = 0; i < props.activeMode.gridSize; i++) {\n      rows.push(\n        <div className={styles.row} key={i}>\n          {renderCells(i + 1)}\n        </div>\n      );\n    }\n\n    return rows;\n  }\n\n  return (\n    <div>\n      {renderRows()}\n    </div>\n  );\n}\n\nexport default Grid;\n\n","import styles from './ActiveCellsList.module.scss';\n\nfunction ActiveCellsList(props) {\n  const renderList = () => {\n    return Object.values(props.activeCells).map((currElem, index) => (\n      currElem &&\n      <li key={index} className={styles.listItem}>\n        {currElem}\n      </li>\n    ));\n  }\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Highlighted squares</h1>\n      <ul className={styles.list}>\n        {renderList()}\n      </ul>\n    </div>\n  );\n}\n\nexport default ActiveCellsList;\n\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDownArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg-icon\",\n    style: {\n      fill: \"currentColor\",\n      overflow: \"hidden\"\n    },\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.9 324.3l72.8-72.8L512 626.9l375.3-375.4 72.8 72.8L512 772.5z\",\n    fill: \"#333333\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownArrow);\nexport default __webpack_public_path__ + \"static/media/down-arrow.fed2395f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\nimport cx from 'classnames';\n\nimport styles from './Main.module.scss';\nimport Grid from 'components/Grid/Grid';\nimport ActiveCellsList from 'components/ActiveCellsList/ActiveCellsList';\nimport { ReactComponent as Arrow } from './img/down-arrow.svg'\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mods: props.mods,\n      activeMode: null,\n      isModeStarted: false,\n      activeCells: {},\n      isDropdownOpened: false\n    }\n  }\n\n  changeCellState = (rowIdx, cellIdx) => {\n    if (!this.state.isModeStarted) return;\n\n    this.setState(prevState => ({\n      activeCells: {\n        ...prevState.activeCells,\n        [`${rowIdx}-${cellIdx}`]: prevState.activeCells[`${rowIdx}-${cellIdx}`] ? null : `row ${rowIdx} - col ${cellIdx}`\n      }\n    }));\n  }\n\n  changeMode = (currMode) => {\n    this.setState({\n      activeMode: currMode,\n      activeCells: {}\n    });\n  }\n\n  renderOptions = () => {\n    return this.state.mods.map((currMode, index) => (\n      <div className={styles.option} key={index} onClick={() => this.changeMode(currMode)}>\n        {currMode.modeName}\n      </div>\n    ));\n  }\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      isDropdownOpened: !prevState.isDropdownOpened\n    }));\n  }\n\n  toggleStartBtn = () => {\n    if (!this.state.activeMode) return;\n\n    this.setState(prevState => (\n      {isModeStarted: !prevState.isModeStarted}\n    ));\n  }\n\n  render() {\n    const {\n      activeMode,\n      isModeStarted,\n      activeCells,\n      isDropdownOpened\n    } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.gridContainer}>\n          <div className={styles.controls}>\n            <div\n              className={cx(\n                styles.select,\n                {[styles.selectOpened]: isDropdownOpened}\n              )}\n              onClick={this.toggleDropdown}\n            >\n              { (activeMode && activeMode.modeName) ||\n                <span className={styles.selectDefaultValue}>Pick a mode</span>\n              }\n              <Arrow />\n              <div className={styles.dropdown}>\n                {this.renderOptions()}\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              className={cx(\n                styles.startBtn,\n                { [styles.startBtnDisabled]: !activeMode,\n                  [styles.startBtnActive]: isModeStarted}\n              )}\n              onClick={this.toggleStartBtn}\n            >\n              {isModeStarted ? 'STOP' : 'START'}\n            </button>\n          </div>\n          { activeMode &&\n            <Grid\n                activeMode={activeMode}\n                activeCells={activeCells}\n                changeCellState={this.changeCellState}\n            />\n          }\n        </div>\n        { activeMode &&\n          <ActiveCellsList activeCells={activeCells} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport cx from 'classnames';\n\nimport Main from 'components/Main/Main';\nimport styles from './App.module.scss';\n\nconst GET_MODS_URL = process.env.REACT_APP_GET_MODS_URL;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFetching: true,\n      mods: null,\n      error: null\n    }\n  }\n\n  componentDidMount() {\n    this.fetchMods();\n  }\n\n  handleMods = (result) => {\n    if (typeof result !== 'object' || result === null) return;\n\n    return Object.keys(result).map(currKey => (\n      {\n        modeName: currKey.replace('Mode', ''),\n        gridSize: result[currKey].field\n      }\n    ));\n  }\n\n  fetchMods = () => {\n    fetch(GET_MODS_URL)\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          isFetching: false,\n          mods: this.handleMods(result)\n        });\n      })\n      .catch(err => {\n        this.setState({\n          isFetching: false,\n          error: err\n        });\n      });\n  }\n\n  render() {\n    const {\n      isFetching,\n      mods,\n      error\n    } = this.state;\n\n    if (error || (!isFetching && !mods)) {\n      return (\n        <div className={cx(styles.app, styles.error)}>\n          Some error has occurred!\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.app}>\n        { isFetching\n          ? <div className={styles.loader}>Loading ...</div>\n          : <Main mods={mods}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ActiveCellsList_container__26huK\",\"title\":\"ActiveCellsList_title__1SVDY\",\"list\":\"ActiveCellsList_list__2AfMZ\",\"listItem\":\"ActiveCellsList_listItem__21eno\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3BT4Y\",\"error\":\"App_error__3kwyn\",\"loader\":\"App_loader__RWn0r\"};"],"sourceRoot":""}